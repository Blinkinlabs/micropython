import AES
import Packet
import IEEE802154
import CCM

aes = AES.AES(b"\x01\x03\x05\x07\x09\x0b\x0d\x0f\x00\x02\x04\x06\x08\x0a\x0c\x0d")

parser = IEEE802154.IEEE802154(aes)
packet = Packet.Packet()

packet.init(bytearray.fromhex("41883b621affff00004802fdff382b0b432887480400b19de80b004b120000055665c14f13102410078a3d12501ff1"))
parser.parse(packet)
parser.show()
print("-----")


message = bytearray(b'\x0c\x00\x00\x06\x00\x04\x01\x01#\x01\r\x02')
mic = CCM.encrypt(
	bytearray(b'H\x02\xfd\xff8+\x0bC-\x87H\x04\x00\xb1\x9d\xe8\x0b\x00K\x12\x00\x00'), # auth
	message,
	bytearray(b'\x01\xb1\x9d\xe8\x0b\x00K\x12\x00\x87H\x04\x00-\x00\x00'), # nonce
	aes
)
#print("message=", message)
#print("mic=", mic)
cipher_mic= bytearray(b'\x12P\x1f\xf1')
cipher_message = bytearray(b'\x05Ve\xc1O\x13\x10$\x10\x07\x8a=')
if message != cipher_message:
	print("cipher message bad")
if mic != cipher_mic:
	print("cipher mic bad")
if message == cipher_message and mic == cipher_mic:
	print("Good cipher!")
print("-----")

#packet.init(bytearray(b'a\x88w\x065\xa9O\xb9\x9c-\xe7\x1a\x05\x00\x03\xd1\xa9!\x9a\xef\xf1\xb5}I'))
#parser.parse(packet)
#parser.show()

packet.init(bytearray(b'A\x88ub\x1a\xff\xff\x00\x00\t\x12\xfc\xff\x00\x00\x01\x03\xb1\x9d\xe8\x0b\x00K\x12\x00-P\xf0\x04\x00\xb1\x9d\xe8\x0b\x00K\x12\x00\x00(\x87Gw\xbcP'))
parser.parse(packet)
parser.show()

print("-----")

packet.init(bytearray(b'A\x88\xdbb\x1a\xff\xff\x00\x00\x08\x02\xfc\xff\x00\x00\x1e^-\xb6\xf0\x04\x00\xb1\x9d\xe8\x0b\x00K\x12\x00\x000{\x9fz4G\x15\xc6\xe9\xb4\xdd\xb5\xce],'))
#packet.init(bytearray(b'A\x88Vb\x1a\xff\xff\x00\x00\t\x12\xfc\xff\x00\x00\x01\xe3\xb1\x9d\xe8\x0b\x00K\x12\x00-1\xf0\x04\x00\xb1\x9d\xe8\x0b\x00K\x12\x00\x00\x03I\xd7\xe0\xb3M'))
parser.parse(packet)
parser.show()
